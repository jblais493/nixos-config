#!/usr/bin/env sh
# Universal music control with EMMS as primary target
# Usage: ./music_control.sh [command]
# Commands: previous, next, play-pause, play, pause, stop

COMMAND=$1

# Function to check if EMMS is available and responsive
is_emms_available() {
    # Check if emacsclient can connect and EMMS is loaded
    emacsclient -e "(featurep 'emms)" 2>/dev/null | grep -q "t"
}

# Function to execute EMMS command
emms_command() {
    local cmd=$1
    case "$cmd" in
        "previous")
            emacsclient -e "(emms-previous)" >/dev/null 2>&1
            ;;
        "next")
            emacsclient -e "(emms-next)" >/dev/null 2>&1
            ;;
        "play-pause")
            emacsclient -e "(emms-pause)" >/dev/null 2>&1
            ;;
        "play")
            emacsclient -e "(emms-start)" >/dev/null 2>&1
            ;;
        "pause")
            emacsclient -e "(emms-pause)" >/dev/null 2>&1
            ;;
        "stop")
            emacsclient -e "(emms-stop)" >/dev/null 2>&1
            ;;
    esac
}

# Function to find the most appropriate player to control (fallback)
get_target_player() {
    # First check if any player is currently playing
    local playing_player=$(playerctl -l 2>/dev/null | xargs -I{} sh -c 'playerctl -p {} status 2>/dev/null | grep -q "Playing" && echo {}' | head -1)
    if [ -n "$playing_player" ]; then
        echo "$playing_player"
        return
    fi

    # If nothing is playing, check if Spotify is running
    if playerctl -l 2>/dev/null | grep -q "spotify"; then
        echo "spotify"
        return
    fi

    # Default to MPD if available
    if command -v mpc >/dev/null && mpc status >/dev/null 2>&1; then
        echo "mpd"
        return
    fi

    # Check for browser-based players (likely YouTube)
    local browser=$(playerctl -l 2>/dev/null | grep -E 'firefox|chromium|brave|chrome' | head -1)
    if [ -n "$browser" ]; then
        echo "$browser"
        return
    fi

    # Fallback to the first available player
    local first_player=$(playerctl -l 2>/dev/null | head -1)
    if [ -n "$first_player" ]; then
        echo "$first_player"
    else
        echo ""
    fi
}

# Primary: Check EMMS first
if is_emms_available; then
    emms_command "$COMMAND"
    exit 0
fi

# Fallback: Use traditional player control
TARGET_PLAYER=$(get_target_player)

if [ -z "$TARGET_PLAYER" ]; then
    notify-send "Music Control" "No active music players found (EMMS not loaded)"
    exit 1
fi

# Execute the command on the target player
if [ "$TARGET_PLAYER" = "mpd" ]; then
    case "$COMMAND" in
        "previous")
            mpc prev >/dev/null
            ;;
        "next")
            mpc next >/dev/null
            ;;
        "play-pause" | "play" | "pause")
            mpc toggle >/dev/null
            ;;
        "stop")
            mpc stop >/dev/null
            ;;
    esac

    CURRENT_TRACK=$(mpc current)
    if [ -n "$CURRENT_TRACK" ]; then
        notify-send "MPD" "$CURRENT_TRACK"
    fi
else
    playerctl -p "$TARGET_PLAYER" "$COMMAND" >/dev/null 2>&1

    ARTIST=$(playerctl -p "$TARGET_PLAYER" metadata artist 2>/dev/null)
    TITLE=$(playerctl -p "$TARGET_PLAYER" metadata title 2>/dev/null)

    if [ -n "$TITLE" ]; then
        if [ -n "$ARTIST" ]; then
            notify-send "$TARGET_PLAYER" "$ARTIST - $TITLE"
        else
            notify-send "$TARGET_PLAYER" "$TITLE"
        fi
    fi
fi
